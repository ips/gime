#!/bin/bash
# -*- coding: utf-8 -*-
#
#   Copyright 2009 ExeGames.PL & Serenity.org.pl
#   license = GPLv3
#   version =
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.

echo "gime-resize - GameImage Size Changing Tool"
echo "(c) 2009 by ExeGames.PL & Serenity.org.pl"

if [ "$1" = "" ]; then
	echo "usage: $0 imagename newsize [filesystem]"
	echo "imagename - image name, must be decompressed, without .gime suffix"
	echo "newsize - new size that you want"
	echo "filesystem - specify filesystem of the image if is other than ext4"
	exit 0
fi

#TODO <- watch for it!

echo "WARNING: This is just STUB!"


if [ -e "$1" ]; then
	echo "-> $1 found"
	if [ "$3" = "" ]; then
		echo "-> Mounting $1 as ext4"
		if [ -d "$1-mnt" ]; then
			sudo umount $1
			rm -rf $1-mnt
		fi

		if [ -x "./gime-mount.py" ]; then
			./gime-mount.py $1
		elif [ -x "/usr/bin/gime-mount" ]; then
			/usr/bin/gime-mount $1
		elif [ -x "../python/gime-mount.py" ]; then
			../python/gime-mount.py $1
		else
			echo "-> Couldn't find gime-mount!"; exit gime-mount_missing
		fi
	else
		echo "-> Mounting $1 as $3"
		if [ -x "./gime-mount.py" ]; then 
			./gime-mount.py $1 $3
		elif [ -x "/usr/bin/gime-mount" ]; then
			/usr/bin/gime-mount $1 $3
		elif [ -x "../python/gime-mount.py" ]; then
			../python/gime-mount.py $1 $3
		else
			echo "-> Couldn't find gime-mount!"; exit gime-mount_missing
		fi
	fi
	if [ "$2" = "" ]; then
		echo "-> You must specify new size (ex. 1 GB)"
	else
		dd if=/dev/zero of=$1-new bs=$2 count=1 #TODO must fix later, now it's using alot RAM, but works ;)
	fi
#TODO Rest of this :P
fi
